<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picboxClient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>